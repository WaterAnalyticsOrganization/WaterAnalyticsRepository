//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WaterAnalyticsService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WaterQuant", Namespace="http://schemas.datacontract.org/2004/07/WaterAnalyticsService")]
    public partial class WaterQuant : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private decimal QuantityField;
        
        private System.DateTime StimeField;
        
        private int UserIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Stime
        {
            get
            {
                return this.StimeField;
            }
            set
            {
                this.StimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WaterQuantLocation", Namespace="http://schemas.datacontract.org/2004/07/WaterAnalyticsService")]
    public partial class WaterQuantLocation : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string LocationNameField;
        
        private decimal QuantityField;
        
        private System.DateTime StimeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName
        {
            get
            {
                return this.LocationNameField;
            }
            set
            {
                this.LocationNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Stime
        {
            get
            {
                return this.StimeField;
            }
            set
            {
                this.StimeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationDetails", Namespace="http://schemas.datacontract.org/2004/07/WaterAnalyticsService")]
    public partial class LocationDetails : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int Location_IdField;
        
        private string Location_nameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Location_Id
        {
            get
            {
                return this.Location_IdField;
            }
            set
            {
                this.Location_IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location_name
        {
            get
            {
                return this.Location_nameField;
            }
            set
            {
                this.Location_nameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndAddress", Namespace="http://schemas.datacontract.org/2004/07/WaterAnalyticsService")]
    public partial class IndAddress : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DescriptionField;
        
        private string EmailField;
        
        private string LocationNameField;
        
        private string NameField;
        
        private int NoOfPeopleField;
        
        private string SensorIDField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName
        {
            get
            {
                return this.LocationNameField;
            }
            set
            {
                this.LocationNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfPeople
        {
            get
            {
                return this.NoOfPeopleField;
            }
            set
            {
                this.NoOfPeopleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorID
        {
            get
            {
                return this.SensorIDField;
            }
            set
            {
                this.SensorIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZoneDetails", Namespace="http://schemas.datacontract.org/2004/07/WaterAnalyticsService")]
    public partial class ZoneDetails : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private decimal QuantityField;
        
        private string RegionField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region
        {
            get
            {
                return this.RegionField;
            }
            set
            {
                this.RegionField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroundWaterDetail", Namespace="http://schemas.datacontract.org/2004/07/WaterAnalyticsService")]
    public partial class GroundWaterDetail : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string Location_nameField;
        
        private decimal QuantityField;
        
        private int StimeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location_name
        {
            get
            {
                return this.Location_nameField;
            }
            set
            {
                this.Location_nameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stime
        {
            get
            {
                return this.StimeField;
            }
            set
            {
                this.StimeField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IWaterAnalytics")]
public interface IWaterAnalytics
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/isAuthenticated", ReplyAction="http://tempuri.org/IWaterAnalytics/isAuthenticatedResponse")]
    int isAuthenticated(int userId, string password);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/isAuthenticated", ReplyAction="http://tempuri.org/IWaterAnalytics/isAuthenticatedResponse")]
    System.IAsyncResult BeginisAuthenticated(int userId, string password, System.AsyncCallback callback, object asyncState);
    
    int EndisAuthenticated(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/getWaterQuantByUserId", ReplyAction="http://tempuri.org/IWaterAnalytics/getWaterQuantByUserIdResponse")]
    WaterAnalyticsService.WaterQuant[] getWaterQuantByUserId(int UserID, int ind, System.DateTime from, System.DateTime to);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/getWaterQuantByUserId", ReplyAction="http://tempuri.org/IWaterAnalytics/getWaterQuantByUserIdResponse")]
    System.IAsyncResult BegingetWaterQuantByUserId(int UserID, int ind, System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState);
    
    WaterAnalyticsService.WaterQuant[] EndgetWaterQuantByUserId(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/getWaterQuantByLocation", ReplyAction="http://tempuri.org/IWaterAnalytics/getWaterQuantByLocationResponse")]
    WaterAnalyticsService.WaterQuantLocation[] getWaterQuantByLocation(string Location, int ind, System.DateTime from, System.DateTime to);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/getWaterQuantByLocation", ReplyAction="http://tempuri.org/IWaterAnalytics/getWaterQuantByLocationResponse")]
    System.IAsyncResult BegingetWaterQuantByLocation(string Location, int ind, System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState);
    
    WaterAnalyticsService.WaterQuantLocation[] EndgetWaterQuantByLocation(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/getWaterQuantPerPerson", ReplyAction="http://tempuri.org/IWaterAnalytics/getWaterQuantPerPersonResponse")]
    WaterAnalyticsService.WaterQuant[] getWaterQuantPerPerson(int UserID, int ind, System.DateTime from, System.DateTime to);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/getWaterQuantPerPerson", ReplyAction="http://tempuri.org/IWaterAnalytics/getWaterQuantPerPersonResponse")]
    System.IAsyncResult BegingetWaterQuantPerPerson(int UserID, int ind, System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState);
    
    WaterAnalyticsService.WaterQuant[] EndgetWaterQuantPerPerson(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/getAllLocation", ReplyAction="http://tempuri.org/IWaterAnalytics/getAllLocationResponse")]
    WaterAnalyticsService.LocationDetails[] getAllLocation();
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/getAllLocation", ReplyAction="http://tempuri.org/IWaterAnalytics/getAllLocationResponse")]
    System.IAsyncResult BegingetAllLocation(System.AsyncCallback callback, object asyncState);
    
    WaterAnalyticsService.LocationDetails[] EndgetAllLocation(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/getWaterQuantPerPersonArea", ReplyAction="http://tempuri.org/IWaterAnalytics/getWaterQuantPerPersonAreaResponse")]
    WaterAnalyticsService.WaterQuantLocation[] getWaterQuantPerPersonArea(string Area, int ind, System.DateTime from, System.DateTime to);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/getWaterQuantPerPersonArea", ReplyAction="http://tempuri.org/IWaterAnalytics/getWaterQuantPerPersonAreaResponse")]
    System.IAsyncResult BegingetWaterQuantPerPersonArea(string Area, int ind, System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState);
    
    WaterAnalyticsService.WaterQuantLocation[] EndgetWaterQuantPerPersonArea(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/UpdateDetails", ReplyAction="http://tempuri.org/IWaterAnalytics/UpdateDetailsResponse")]
    int UpdateDetails(int UserID, string Name, string email, int noOfPeople);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/UpdateDetails", ReplyAction="http://tempuri.org/IWaterAnalytics/UpdateDetailsResponse")]
    System.IAsyncResult BeginUpdateDetails(int UserID, string Name, string email, int noOfPeople, System.AsyncCallback callback, object asyncState);
    
    int EndUpdateDetails(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/getDetails", ReplyAction="http://tempuri.org/IWaterAnalytics/getDetailsResponse")]
    WaterAnalyticsService.IndAddress getDetails(int sensorId);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/getDetails", ReplyAction="http://tempuri.org/IWaterAnalytics/getDetailsResponse")]
    System.IAsyncResult BegingetDetails(int sensorId, System.AsyncCallback callback, object asyncState);
    
    WaterAnalyticsService.IndAddress EndgetDetails(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/getDataByZone", ReplyAction="http://tempuri.org/IWaterAnalytics/getDataByZoneResponse")]
    WaterAnalyticsService.ZoneDetails[] getDataByZone(System.DateTime from, System.DateTime to);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/getDataByZone", ReplyAction="http://tempuri.org/IWaterAnalytics/getDataByZoneResponse")]
    System.IAsyncResult BegingetDataByZone(System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState);
    
    WaterAnalyticsService.ZoneDetails[] EndgetDataByZone(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/getGroundWaterByLocation", ReplyAction="http://tempuri.org/IWaterAnalytics/getGroundWaterByLocationResponse")]
    WaterAnalyticsService.GroundWaterDetail[] getGroundWaterByLocation(string Location, int from, int to);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/getGroundWaterByLocation", ReplyAction="http://tempuri.org/IWaterAnalytics/getGroundWaterByLocationResponse")]
    System.IAsyncResult BegingetGroundWaterByLocation(string Location, int from, int to, System.AsyncCallback callback, object asyncState);
    
    WaterAnalyticsService.GroundWaterDetail[] EndgetGroundWaterByLocation(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IWaterAnalyticsChannel : IWaterAnalytics, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class isAuthenticatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public isAuthenticatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public int Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class getWaterQuantByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public getWaterQuantByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WaterAnalyticsService.WaterQuant[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WaterAnalyticsService.WaterQuant[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class getWaterQuantByLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public getWaterQuantByLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WaterAnalyticsService.WaterQuantLocation[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WaterAnalyticsService.WaterQuantLocation[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class getWaterQuantPerPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public getWaterQuantPerPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WaterAnalyticsService.WaterQuant[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WaterAnalyticsService.WaterQuant[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class getAllLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public getAllLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WaterAnalyticsService.LocationDetails[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WaterAnalyticsService.LocationDetails[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class getWaterQuantPerPersonAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public getWaterQuantPerPersonAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WaterAnalyticsService.WaterQuantLocation[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WaterAnalyticsService.WaterQuantLocation[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class UpdateDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public UpdateDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public int Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class getDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public getDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WaterAnalyticsService.IndAddress Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WaterAnalyticsService.IndAddress)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class getDataByZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public getDataByZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WaterAnalyticsService.ZoneDetails[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WaterAnalyticsService.ZoneDetails[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class getGroundWaterByLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public getGroundWaterByLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WaterAnalyticsService.GroundWaterDetail[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WaterAnalyticsService.GroundWaterDetail[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class WaterAnalyticsClient : System.ServiceModel.ClientBase<IWaterAnalytics>, IWaterAnalytics
{
    
    private BeginOperationDelegate onBeginisAuthenticatedDelegate;
    
    private EndOperationDelegate onEndisAuthenticatedDelegate;
    
    private System.Threading.SendOrPostCallback onisAuthenticatedCompletedDelegate;
    
    private BeginOperationDelegate onBegingetWaterQuantByUserIdDelegate;
    
    private EndOperationDelegate onEndgetWaterQuantByUserIdDelegate;
    
    private System.Threading.SendOrPostCallback ongetWaterQuantByUserIdCompletedDelegate;
    
    private BeginOperationDelegate onBegingetWaterQuantByLocationDelegate;
    
    private EndOperationDelegate onEndgetWaterQuantByLocationDelegate;
    
    private System.Threading.SendOrPostCallback ongetWaterQuantByLocationCompletedDelegate;
    
    private BeginOperationDelegate onBegingetWaterQuantPerPersonDelegate;
    
    private EndOperationDelegate onEndgetWaterQuantPerPersonDelegate;
    
    private System.Threading.SendOrPostCallback ongetWaterQuantPerPersonCompletedDelegate;
    
    private BeginOperationDelegate onBegingetAllLocationDelegate;
    
    private EndOperationDelegate onEndgetAllLocationDelegate;
    
    private System.Threading.SendOrPostCallback ongetAllLocationCompletedDelegate;
    
    private BeginOperationDelegate onBegingetWaterQuantPerPersonAreaDelegate;
    
    private EndOperationDelegate onEndgetWaterQuantPerPersonAreaDelegate;
    
    private System.Threading.SendOrPostCallback ongetWaterQuantPerPersonAreaCompletedDelegate;
    
    private BeginOperationDelegate onBeginUpdateDetailsDelegate;
    
    private EndOperationDelegate onEndUpdateDetailsDelegate;
    
    private System.Threading.SendOrPostCallback onUpdateDetailsCompletedDelegate;
    
    private BeginOperationDelegate onBegingetDetailsDelegate;
    
    private EndOperationDelegate onEndgetDetailsDelegate;
    
    private System.Threading.SendOrPostCallback ongetDetailsCompletedDelegate;
    
    private BeginOperationDelegate onBegingetDataByZoneDelegate;
    
    private EndOperationDelegate onEndgetDataByZoneDelegate;
    
    private System.Threading.SendOrPostCallback ongetDataByZoneCompletedDelegate;
    
    private BeginOperationDelegate onBegingetGroundWaterByLocationDelegate;
    
    private EndOperationDelegate onEndgetGroundWaterByLocationDelegate;
    
    private System.Threading.SendOrPostCallback ongetGroundWaterByLocationCompletedDelegate;
    
    public WaterAnalyticsClient()
    {
    }
    
    public WaterAnalyticsClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public WaterAnalyticsClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WaterAnalyticsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WaterAnalyticsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public event System.EventHandler<isAuthenticatedCompletedEventArgs> isAuthenticatedCompleted;
    
    public event System.EventHandler<getWaterQuantByUserIdCompletedEventArgs> getWaterQuantByUserIdCompleted;
    
    public event System.EventHandler<getWaterQuantByLocationCompletedEventArgs> getWaterQuantByLocationCompleted;
    
    public event System.EventHandler<getWaterQuantPerPersonCompletedEventArgs> getWaterQuantPerPersonCompleted;
    
    public event System.EventHandler<getAllLocationCompletedEventArgs> getAllLocationCompleted;
    
    public event System.EventHandler<getWaterQuantPerPersonAreaCompletedEventArgs> getWaterQuantPerPersonAreaCompleted;
    
    public event System.EventHandler<UpdateDetailsCompletedEventArgs> UpdateDetailsCompleted;
    
    public event System.EventHandler<getDetailsCompletedEventArgs> getDetailsCompleted;
    
    public event System.EventHandler<getDataByZoneCompletedEventArgs> getDataByZoneCompleted;
    
    public event System.EventHandler<getGroundWaterByLocationCompletedEventArgs> getGroundWaterByLocationCompleted;
    
    public int isAuthenticated(int userId, string password)
    {
        return base.Channel.isAuthenticated(userId, password);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginisAuthenticated(int userId, string password, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginisAuthenticated(userId, password, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public int EndisAuthenticated(System.IAsyncResult result)
    {
        return base.Channel.EndisAuthenticated(result);
    }
    
    private System.IAsyncResult OnBeginisAuthenticated(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int userId = ((int)(inValues[0]));
        string password = ((string)(inValues[1]));
        return this.BeginisAuthenticated(userId, password, callback, asyncState);
    }
    
    private object[] OnEndisAuthenticated(System.IAsyncResult result)
    {
        int retVal = this.EndisAuthenticated(result);
        return new object[] {
                retVal};
    }
    
    private void OnisAuthenticatedCompleted(object state)
    {
        if ((this.isAuthenticatedCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.isAuthenticatedCompleted(this, new isAuthenticatedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void isAuthenticatedAsync(int userId, string password)
    {
        this.isAuthenticatedAsync(userId, password, null);
    }
    
    public void isAuthenticatedAsync(int userId, string password, object userState)
    {
        if ((this.onBeginisAuthenticatedDelegate == null))
        {
            this.onBeginisAuthenticatedDelegate = new BeginOperationDelegate(this.OnBeginisAuthenticated);
        }
        if ((this.onEndisAuthenticatedDelegate == null))
        {
            this.onEndisAuthenticatedDelegate = new EndOperationDelegate(this.OnEndisAuthenticated);
        }
        if ((this.onisAuthenticatedCompletedDelegate == null))
        {
            this.onisAuthenticatedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnisAuthenticatedCompleted);
        }
        base.InvokeAsync(this.onBeginisAuthenticatedDelegate, new object[] {
                    userId,
                    password}, this.onEndisAuthenticatedDelegate, this.onisAuthenticatedCompletedDelegate, userState);
    }
    
    public WaterAnalyticsService.WaterQuant[] getWaterQuantByUserId(int UserID, int ind, System.DateTime from, System.DateTime to)
    {
        return base.Channel.getWaterQuantByUserId(UserID, ind, from, to);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BegingetWaterQuantByUserId(int UserID, int ind, System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BegingetWaterQuantByUserId(UserID, ind, from, to, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public WaterAnalyticsService.WaterQuant[] EndgetWaterQuantByUserId(System.IAsyncResult result)
    {
        return base.Channel.EndgetWaterQuantByUserId(result);
    }
    
    private System.IAsyncResult OnBegingetWaterQuantByUserId(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int UserID = ((int)(inValues[0]));
        int ind = ((int)(inValues[1]));
        System.DateTime from = ((System.DateTime)(inValues[2]));
        System.DateTime to = ((System.DateTime)(inValues[3]));
        return this.BegingetWaterQuantByUserId(UserID, ind, from, to, callback, asyncState);
    }
    
    private object[] OnEndgetWaterQuantByUserId(System.IAsyncResult result)
    {
        WaterAnalyticsService.WaterQuant[] retVal = this.EndgetWaterQuantByUserId(result);
        return new object[] {
                retVal};
    }
    
    private void OngetWaterQuantByUserIdCompleted(object state)
    {
        if ((this.getWaterQuantByUserIdCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.getWaterQuantByUserIdCompleted(this, new getWaterQuantByUserIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void getWaterQuantByUserIdAsync(int UserID, int ind, System.DateTime from, System.DateTime to)
    {
        this.getWaterQuantByUserIdAsync(UserID, ind, from, to, null);
    }
    
    public void getWaterQuantByUserIdAsync(int UserID, int ind, System.DateTime from, System.DateTime to, object userState)
    {
        if ((this.onBegingetWaterQuantByUserIdDelegate == null))
        {
            this.onBegingetWaterQuantByUserIdDelegate = new BeginOperationDelegate(this.OnBegingetWaterQuantByUserId);
        }
        if ((this.onEndgetWaterQuantByUserIdDelegate == null))
        {
            this.onEndgetWaterQuantByUserIdDelegate = new EndOperationDelegate(this.OnEndgetWaterQuantByUserId);
        }
        if ((this.ongetWaterQuantByUserIdCompletedDelegate == null))
        {
            this.ongetWaterQuantByUserIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetWaterQuantByUserIdCompleted);
        }
        base.InvokeAsync(this.onBegingetWaterQuantByUserIdDelegate, new object[] {
                    UserID,
                    ind,
                    from,
                    to}, this.onEndgetWaterQuantByUserIdDelegate, this.ongetWaterQuantByUserIdCompletedDelegate, userState);
    }
    
    public WaterAnalyticsService.WaterQuantLocation[] getWaterQuantByLocation(string Location, int ind, System.DateTime from, System.DateTime to)
    {
        return base.Channel.getWaterQuantByLocation(Location, ind, from, to);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BegingetWaterQuantByLocation(string Location, int ind, System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BegingetWaterQuantByLocation(Location, ind, from, to, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public WaterAnalyticsService.WaterQuantLocation[] EndgetWaterQuantByLocation(System.IAsyncResult result)
    {
        return base.Channel.EndgetWaterQuantByLocation(result);
    }
    
    private System.IAsyncResult OnBegingetWaterQuantByLocation(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string Location = ((string)(inValues[0]));
        int ind = ((int)(inValues[1]));
        System.DateTime from = ((System.DateTime)(inValues[2]));
        System.DateTime to = ((System.DateTime)(inValues[3]));
        return this.BegingetWaterQuantByLocation(Location, ind, from, to, callback, asyncState);
    }
    
    private object[] OnEndgetWaterQuantByLocation(System.IAsyncResult result)
    {
        WaterAnalyticsService.WaterQuantLocation[] retVal = this.EndgetWaterQuantByLocation(result);
        return new object[] {
                retVal};
    }
    
    private void OngetWaterQuantByLocationCompleted(object state)
    {
        if ((this.getWaterQuantByLocationCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.getWaterQuantByLocationCompleted(this, new getWaterQuantByLocationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void getWaterQuantByLocationAsync(string Location, int ind, System.DateTime from, System.DateTime to)
    {
        this.getWaterQuantByLocationAsync(Location, ind, from, to, null);
    }
    
    public void getWaterQuantByLocationAsync(string Location, int ind, System.DateTime from, System.DateTime to, object userState)
    {
        if ((this.onBegingetWaterQuantByLocationDelegate == null))
        {
            this.onBegingetWaterQuantByLocationDelegate = new BeginOperationDelegate(this.OnBegingetWaterQuantByLocation);
        }
        if ((this.onEndgetWaterQuantByLocationDelegate == null))
        {
            this.onEndgetWaterQuantByLocationDelegate = new EndOperationDelegate(this.OnEndgetWaterQuantByLocation);
        }
        if ((this.ongetWaterQuantByLocationCompletedDelegate == null))
        {
            this.ongetWaterQuantByLocationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetWaterQuantByLocationCompleted);
        }
        base.InvokeAsync(this.onBegingetWaterQuantByLocationDelegate, new object[] {
                    Location,
                    ind,
                    from,
                    to}, this.onEndgetWaterQuantByLocationDelegate, this.ongetWaterQuantByLocationCompletedDelegate, userState);
    }
    
    public WaterAnalyticsService.WaterQuant[] getWaterQuantPerPerson(int UserID, int ind, System.DateTime from, System.DateTime to)
    {
        return base.Channel.getWaterQuantPerPerson(UserID, ind, from, to);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BegingetWaterQuantPerPerson(int UserID, int ind, System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BegingetWaterQuantPerPerson(UserID, ind, from, to, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public WaterAnalyticsService.WaterQuant[] EndgetWaterQuantPerPerson(System.IAsyncResult result)
    {
        return base.Channel.EndgetWaterQuantPerPerson(result);
    }
    
    private System.IAsyncResult OnBegingetWaterQuantPerPerson(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int UserID = ((int)(inValues[0]));
        int ind = ((int)(inValues[1]));
        System.DateTime from = ((System.DateTime)(inValues[2]));
        System.DateTime to = ((System.DateTime)(inValues[3]));
        return this.BegingetWaterQuantPerPerson(UserID, ind, from, to, callback, asyncState);
    }
    
    private object[] OnEndgetWaterQuantPerPerson(System.IAsyncResult result)
    {
        WaterAnalyticsService.WaterQuant[] retVal = this.EndgetWaterQuantPerPerson(result);
        return new object[] {
                retVal};
    }
    
    private void OngetWaterQuantPerPersonCompleted(object state)
    {
        if ((this.getWaterQuantPerPersonCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.getWaterQuantPerPersonCompleted(this, new getWaterQuantPerPersonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void getWaterQuantPerPersonAsync(int UserID, int ind, System.DateTime from, System.DateTime to)
    {
        this.getWaterQuantPerPersonAsync(UserID, ind, from, to, null);
    }
    
    public void getWaterQuantPerPersonAsync(int UserID, int ind, System.DateTime from, System.DateTime to, object userState)
    {
        if ((this.onBegingetWaterQuantPerPersonDelegate == null))
        {
            this.onBegingetWaterQuantPerPersonDelegate = new BeginOperationDelegate(this.OnBegingetWaterQuantPerPerson);
        }
        if ((this.onEndgetWaterQuantPerPersonDelegate == null))
        {
            this.onEndgetWaterQuantPerPersonDelegate = new EndOperationDelegate(this.OnEndgetWaterQuantPerPerson);
        }
        if ((this.ongetWaterQuantPerPersonCompletedDelegate == null))
        {
            this.ongetWaterQuantPerPersonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetWaterQuantPerPersonCompleted);
        }
        base.InvokeAsync(this.onBegingetWaterQuantPerPersonDelegate, new object[] {
                    UserID,
                    ind,
                    from,
                    to}, this.onEndgetWaterQuantPerPersonDelegate, this.ongetWaterQuantPerPersonCompletedDelegate, userState);
    }
    
    public WaterAnalyticsService.LocationDetails[] getAllLocation()
    {
        return base.Channel.getAllLocation();
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BegingetAllLocation(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BegingetAllLocation(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public WaterAnalyticsService.LocationDetails[] EndgetAllLocation(System.IAsyncResult result)
    {
        return base.Channel.EndgetAllLocation(result);
    }
    
    private System.IAsyncResult OnBegingetAllLocation(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return this.BegingetAllLocation(callback, asyncState);
    }
    
    private object[] OnEndgetAllLocation(System.IAsyncResult result)
    {
        WaterAnalyticsService.LocationDetails[] retVal = this.EndgetAllLocation(result);
        return new object[] {
                retVal};
    }
    
    private void OngetAllLocationCompleted(object state)
    {
        if ((this.getAllLocationCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.getAllLocationCompleted(this, new getAllLocationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void getAllLocationAsync()
    {
        this.getAllLocationAsync(null);
    }
    
    public void getAllLocationAsync(object userState)
    {
        if ((this.onBegingetAllLocationDelegate == null))
        {
            this.onBegingetAllLocationDelegate = new BeginOperationDelegate(this.OnBegingetAllLocation);
        }
        if ((this.onEndgetAllLocationDelegate == null))
        {
            this.onEndgetAllLocationDelegate = new EndOperationDelegate(this.OnEndgetAllLocation);
        }
        if ((this.ongetAllLocationCompletedDelegate == null))
        {
            this.ongetAllLocationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetAllLocationCompleted);
        }
        base.InvokeAsync(this.onBegingetAllLocationDelegate, null, this.onEndgetAllLocationDelegate, this.ongetAllLocationCompletedDelegate, userState);
    }
    
    public WaterAnalyticsService.WaterQuantLocation[] getWaterQuantPerPersonArea(string Area, int ind, System.DateTime from, System.DateTime to)
    {
        return base.Channel.getWaterQuantPerPersonArea(Area, ind, from, to);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BegingetWaterQuantPerPersonArea(string Area, int ind, System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BegingetWaterQuantPerPersonArea(Area, ind, from, to, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public WaterAnalyticsService.WaterQuantLocation[] EndgetWaterQuantPerPersonArea(System.IAsyncResult result)
    {
        return base.Channel.EndgetWaterQuantPerPersonArea(result);
    }
    
    private System.IAsyncResult OnBegingetWaterQuantPerPersonArea(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string Area = ((string)(inValues[0]));
        int ind = ((int)(inValues[1]));
        System.DateTime from = ((System.DateTime)(inValues[2]));
        System.DateTime to = ((System.DateTime)(inValues[3]));
        return this.BegingetWaterQuantPerPersonArea(Area, ind, from, to, callback, asyncState);
    }
    
    private object[] OnEndgetWaterQuantPerPersonArea(System.IAsyncResult result)
    {
        WaterAnalyticsService.WaterQuantLocation[] retVal = this.EndgetWaterQuantPerPersonArea(result);
        return new object[] {
                retVal};
    }
    
    private void OngetWaterQuantPerPersonAreaCompleted(object state)
    {
        if ((this.getWaterQuantPerPersonAreaCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.getWaterQuantPerPersonAreaCompleted(this, new getWaterQuantPerPersonAreaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void getWaterQuantPerPersonAreaAsync(string Area, int ind, System.DateTime from, System.DateTime to)
    {
        this.getWaterQuantPerPersonAreaAsync(Area, ind, from, to, null);
    }
    
    public void getWaterQuantPerPersonAreaAsync(string Area, int ind, System.DateTime from, System.DateTime to, object userState)
    {
        if ((this.onBegingetWaterQuantPerPersonAreaDelegate == null))
        {
            this.onBegingetWaterQuantPerPersonAreaDelegate = new BeginOperationDelegate(this.OnBegingetWaterQuantPerPersonArea);
        }
        if ((this.onEndgetWaterQuantPerPersonAreaDelegate == null))
        {
            this.onEndgetWaterQuantPerPersonAreaDelegate = new EndOperationDelegate(this.OnEndgetWaterQuantPerPersonArea);
        }
        if ((this.ongetWaterQuantPerPersonAreaCompletedDelegate == null))
        {
            this.ongetWaterQuantPerPersonAreaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetWaterQuantPerPersonAreaCompleted);
        }
        base.InvokeAsync(this.onBegingetWaterQuantPerPersonAreaDelegate, new object[] {
                    Area,
                    ind,
                    from,
                    to}, this.onEndgetWaterQuantPerPersonAreaDelegate, this.ongetWaterQuantPerPersonAreaCompletedDelegate, userState);
    }
    
    public int UpdateDetails(int UserID, string Name, string email, int noOfPeople)
    {
        return base.Channel.UpdateDetails(UserID, Name, email, noOfPeople);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginUpdateDetails(int UserID, string Name, string email, int noOfPeople, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUpdateDetails(UserID, Name, email, noOfPeople, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public int EndUpdateDetails(System.IAsyncResult result)
    {
        return base.Channel.EndUpdateDetails(result);
    }
    
    private System.IAsyncResult OnBeginUpdateDetails(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int UserID = ((int)(inValues[0]));
        string Name = ((string)(inValues[1]));
        string email = ((string)(inValues[2]));
        int noOfPeople = ((int)(inValues[3]));
        return this.BeginUpdateDetails(UserID, Name, email, noOfPeople, callback, asyncState);
    }
    
    private object[] OnEndUpdateDetails(System.IAsyncResult result)
    {
        int retVal = this.EndUpdateDetails(result);
        return new object[] {
                retVal};
    }
    
    private void OnUpdateDetailsCompleted(object state)
    {
        if ((this.UpdateDetailsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UpdateDetailsCompleted(this, new UpdateDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void UpdateDetailsAsync(int UserID, string Name, string email, int noOfPeople)
    {
        this.UpdateDetailsAsync(UserID, Name, email, noOfPeople, null);
    }
    
    public void UpdateDetailsAsync(int UserID, string Name, string email, int noOfPeople, object userState)
    {
        if ((this.onBeginUpdateDetailsDelegate == null))
        {
            this.onBeginUpdateDetailsDelegate = new BeginOperationDelegate(this.OnBeginUpdateDetails);
        }
        if ((this.onEndUpdateDetailsDelegate == null))
        {
            this.onEndUpdateDetailsDelegate = new EndOperationDelegate(this.OnEndUpdateDetails);
        }
        if ((this.onUpdateDetailsCompletedDelegate == null))
        {
            this.onUpdateDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDetailsCompleted);
        }
        base.InvokeAsync(this.onBeginUpdateDetailsDelegate, new object[] {
                    UserID,
                    Name,
                    email,
                    noOfPeople}, this.onEndUpdateDetailsDelegate, this.onUpdateDetailsCompletedDelegate, userState);
    }
    
    public WaterAnalyticsService.IndAddress getDetails(int sensorId)
    {
        return base.Channel.getDetails(sensorId);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BegingetDetails(int sensorId, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BegingetDetails(sensorId, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public WaterAnalyticsService.IndAddress EndgetDetails(System.IAsyncResult result)
    {
        return base.Channel.EndgetDetails(result);
    }
    
    private System.IAsyncResult OnBegingetDetails(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int sensorId = ((int)(inValues[0]));
        return this.BegingetDetails(sensorId, callback, asyncState);
    }
    
    private object[] OnEndgetDetails(System.IAsyncResult result)
    {
        WaterAnalyticsService.IndAddress retVal = this.EndgetDetails(result);
        return new object[] {
                retVal};
    }
    
    private void OngetDetailsCompleted(object state)
    {
        if ((this.getDetailsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.getDetailsCompleted(this, new getDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void getDetailsAsync(int sensorId)
    {
        this.getDetailsAsync(sensorId, null);
    }
    
    public void getDetailsAsync(int sensorId, object userState)
    {
        if ((this.onBegingetDetailsDelegate == null))
        {
            this.onBegingetDetailsDelegate = new BeginOperationDelegate(this.OnBegingetDetails);
        }
        if ((this.onEndgetDetailsDelegate == null))
        {
            this.onEndgetDetailsDelegate = new EndOperationDelegate(this.OnEndgetDetails);
        }
        if ((this.ongetDetailsCompletedDelegate == null))
        {
            this.ongetDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetDetailsCompleted);
        }
        base.InvokeAsync(this.onBegingetDetailsDelegate, new object[] {
                    sensorId}, this.onEndgetDetailsDelegate, this.ongetDetailsCompletedDelegate, userState);
    }
    
    public WaterAnalyticsService.ZoneDetails[] getDataByZone(System.DateTime from, System.DateTime to)
    {
        return base.Channel.getDataByZone(from, to);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BegingetDataByZone(System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BegingetDataByZone(from, to, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public WaterAnalyticsService.ZoneDetails[] EndgetDataByZone(System.IAsyncResult result)
    {
        return base.Channel.EndgetDataByZone(result);
    }
    
    private System.IAsyncResult OnBegingetDataByZone(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.DateTime from = ((System.DateTime)(inValues[0]));
        System.DateTime to = ((System.DateTime)(inValues[1]));
        return this.BegingetDataByZone(from, to, callback, asyncState);
    }
    
    private object[] OnEndgetDataByZone(System.IAsyncResult result)
    {
        WaterAnalyticsService.ZoneDetails[] retVal = this.EndgetDataByZone(result);
        return new object[] {
                retVal};
    }
    
    private void OngetDataByZoneCompleted(object state)
    {
        if ((this.getDataByZoneCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.getDataByZoneCompleted(this, new getDataByZoneCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void getDataByZoneAsync(System.DateTime from, System.DateTime to)
    {
        this.getDataByZoneAsync(from, to, null);
    }
    
    public void getDataByZoneAsync(System.DateTime from, System.DateTime to, object userState)
    {
        if ((this.onBegingetDataByZoneDelegate == null))
        {
            this.onBegingetDataByZoneDelegate = new BeginOperationDelegate(this.OnBegingetDataByZone);
        }
        if ((this.onEndgetDataByZoneDelegate == null))
        {
            this.onEndgetDataByZoneDelegate = new EndOperationDelegate(this.OnEndgetDataByZone);
        }
        if ((this.ongetDataByZoneCompletedDelegate == null))
        {
            this.ongetDataByZoneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetDataByZoneCompleted);
        }
        base.InvokeAsync(this.onBegingetDataByZoneDelegate, new object[] {
                    from,
                    to}, this.onEndgetDataByZoneDelegate, this.ongetDataByZoneCompletedDelegate, userState);
    }
    
    public WaterAnalyticsService.GroundWaterDetail[] getGroundWaterByLocation(string Location, int from, int to)
    {
        return base.Channel.getGroundWaterByLocation(Location, from, to);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BegingetGroundWaterByLocation(string Location, int from, int to, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BegingetGroundWaterByLocation(Location, from, to, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public WaterAnalyticsService.GroundWaterDetail[] EndgetGroundWaterByLocation(System.IAsyncResult result)
    {
        return base.Channel.EndgetGroundWaterByLocation(result);
    }
    
    private System.IAsyncResult OnBegingetGroundWaterByLocation(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string Location = ((string)(inValues[0]));
        int from = ((int)(inValues[1]));
        int to = ((int)(inValues[2]));
        return this.BegingetGroundWaterByLocation(Location, from, to, callback, asyncState);
    }
    
    private object[] OnEndgetGroundWaterByLocation(System.IAsyncResult result)
    {
        WaterAnalyticsService.GroundWaterDetail[] retVal = this.EndgetGroundWaterByLocation(result);
        return new object[] {
                retVal};
    }
    
    private void OngetGroundWaterByLocationCompleted(object state)
    {
        if ((this.getGroundWaterByLocationCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.getGroundWaterByLocationCompleted(this, new getGroundWaterByLocationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void getGroundWaterByLocationAsync(string Location, int from, int to)
    {
        this.getGroundWaterByLocationAsync(Location, from, to, null);
    }
    
    public void getGroundWaterByLocationAsync(string Location, int from, int to, object userState)
    {
        if ((this.onBegingetGroundWaterByLocationDelegate == null))
        {
            this.onBegingetGroundWaterByLocationDelegate = new BeginOperationDelegate(this.OnBegingetGroundWaterByLocation);
        }
        if ((this.onEndgetGroundWaterByLocationDelegate == null))
        {
            this.onEndgetGroundWaterByLocationDelegate = new EndOperationDelegate(this.OnEndgetGroundWaterByLocation);
        }
        if ((this.ongetGroundWaterByLocationCompletedDelegate == null))
        {
            this.ongetGroundWaterByLocationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetGroundWaterByLocationCompleted);
        }
        base.InvokeAsync(this.onBegingetGroundWaterByLocationDelegate, new object[] {
                    Location,
                    from,
                    to}, this.onEndgetGroundWaterByLocationDelegate, this.ongetGroundWaterByLocationCompletedDelegate, userState);
    }
}
