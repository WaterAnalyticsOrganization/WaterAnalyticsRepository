//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WaterAnalyticsService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WaterQuant", Namespace="http://schemas.datacontract.org/2004/07/WaterAnalyticsService")]
    public partial class WaterQuant : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private decimal QuantityField;
        
        private System.DateTime StimeField;
        
        private int UserIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Stime
        {
            get
            {
                return this.StimeField;
            }
            set
            {
                this.StimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WaterQuantLocation", Namespace="http://schemas.datacontract.org/2004/07/WaterAnalyticsService")]
    public partial class WaterQuantLocation : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string LocationNameField;
        
        private decimal QuantityField;
        
        private System.DateTime StimeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName
        {
            get
            {
                return this.LocationNameField;
            }
            set
            {
                this.LocationNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Stime
        {
            get
            {
                return this.StimeField;
            }
            set
            {
                this.StimeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationDetails", Namespace="http://schemas.datacontract.org/2004/07/WaterAnalyticsService")]
    public partial class LocationDetails : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int Location_IdField;
        
        private string Location_nameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Location_Id
        {
            get
            {
                return this.Location_IdField;
            }
            set
            {
                this.Location_IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location_name
        {
            get
            {
                return this.Location_nameField;
            }
            set
            {
                this.Location_nameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndividualAddress", Namespace="http://schemas.datacontract.org/2004/07/WaterAnalyticsService")]
    public partial class IndividualAddress : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DescriptionField;
        
        private string EmailField;
        
        private string LocationNameField;
        
        private string NameField;
        
        private int NoOfPeopleField;
        
        private string SensorIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName
        {
            get
            {
                return this.LocationNameField;
            }
            set
            {
                this.LocationNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfPeople
        {
            get
            {
                return this.NoOfPeopleField;
            }
            set
            {
                this.NoOfPeopleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorId
        {
            get
            {
                return this.SensorIdField;
            }
            set
            {
                this.SensorIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZoneDetails", Namespace="http://schemas.datacontract.org/2004/07/WaterAnalyticsService")]
    public partial class ZoneDetails : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private decimal QuantityField;
        
        private string RegionField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region
        {
            get
            {
                return this.RegionField;
            }
            set
            {
                this.RegionField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroundWaterDetail", Namespace="http://schemas.datacontract.org/2004/07/WaterAnalyticsService")]
    public partial class GroundWaterDetail : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string Location_nameField;
        
        private decimal QuantityField;
        
        private int StimeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location_name
        {
            get
            {
                return this.Location_nameField;
            }
            set
            {
                this.Location_nameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stime
        {
            get
            {
                return this.StimeField;
            }
            set
            {
                this.StimeField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IWaterAnalytics")]
public interface IWaterAnalytics
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/IsAuthenticated", ReplyAction="http://tempuri.org/IWaterAnalytics/IsAuthenticatedResponse")]
    int IsAuthenticated(int userId, string password);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/IsAuthenticated", ReplyAction="http://tempuri.org/IWaterAnalytics/IsAuthenticatedResponse")]
    System.IAsyncResult BeginIsAuthenticated(int userId, string password, System.AsyncCallback callback, object asyncState);
    
    int EndIsAuthenticated(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/GetWaterQuantByUserId", ReplyAction="http://tempuri.org/IWaterAnalytics/GetWaterQuantByUserIdResponse")]
    WaterAnalyticsService.WaterQuant[] GetWaterQuantByUserId(int UserID, int ind, System.DateTime from, System.DateTime To);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/GetWaterQuantByUserId", ReplyAction="http://tempuri.org/IWaterAnalytics/GetWaterQuantByUserIdResponse")]
    System.IAsyncResult BeginGetWaterQuantByUserId(int UserID, int ind, System.DateTime from, System.DateTime To, System.AsyncCallback callback, object asyncState);
    
    WaterAnalyticsService.WaterQuant[] EndGetWaterQuantByUserId(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/GetWaterQuantByLocation", ReplyAction="http://tempuri.org/IWaterAnalytics/GetWaterQuantByLocationResponse")]
    WaterAnalyticsService.WaterQuantLocation[] GetWaterQuantByLocation(string Location, int ind, System.DateTime from, System.DateTime to);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/GetWaterQuantByLocation", ReplyAction="http://tempuri.org/IWaterAnalytics/GetWaterQuantByLocationResponse")]
    System.IAsyncResult BeginGetWaterQuantByLocation(string Location, int ind, System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState);
    
    WaterAnalyticsService.WaterQuantLocation[] EndGetWaterQuantByLocation(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/GetWaterQuantPerPerson", ReplyAction="http://tempuri.org/IWaterAnalytics/GetWaterQuantPerPersonResponse")]
    WaterAnalyticsService.WaterQuant[] GetWaterQuantPerPerson(int UserID, int ind, System.DateTime from, System.DateTime to);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/GetWaterQuantPerPerson", ReplyAction="http://tempuri.org/IWaterAnalytics/GetWaterQuantPerPersonResponse")]
    System.IAsyncResult BeginGetWaterQuantPerPerson(int UserID, int ind, System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState);
    
    WaterAnalyticsService.WaterQuant[] EndGetWaterQuantPerPerson(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/GetAllLocation", ReplyAction="http://tempuri.org/IWaterAnalytics/GetAllLocationResponse")]
    WaterAnalyticsService.LocationDetails[] GetAllLocation();
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/GetAllLocation", ReplyAction="http://tempuri.org/IWaterAnalytics/GetAllLocationResponse")]
    System.IAsyncResult BeginGetAllLocation(System.AsyncCallback callback, object asyncState);
    
    WaterAnalyticsService.LocationDetails[] EndGetAllLocation(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/GetWaterQuantPerPersonArea", ReplyAction="http://tempuri.org/IWaterAnalytics/GetWaterQuantPerPersonAreaResponse")]
    WaterAnalyticsService.WaterQuantLocation[] GetWaterQuantPerPersonArea(string Area, int ind, System.DateTime from, System.DateTime to);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/GetWaterQuantPerPersonArea", ReplyAction="http://tempuri.org/IWaterAnalytics/GetWaterQuantPerPersonAreaResponse")]
    System.IAsyncResult BeginGetWaterQuantPerPersonArea(string Area, int ind, System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState);
    
    WaterAnalyticsService.WaterQuantLocation[] EndGetWaterQuantPerPersonArea(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/UpdateDetails", ReplyAction="http://tempuri.org/IWaterAnalytics/UpdateDetailsResponse")]
    int UpdateDetails(int UserID, string Name, string email, int noOfPeople);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/UpdateDetails", ReplyAction="http://tempuri.org/IWaterAnalytics/UpdateDetailsResponse")]
    System.IAsyncResult BeginUpdateDetails(int UserID, string Name, string email, int noOfPeople, System.AsyncCallback callback, object asyncState);
    
    int EndUpdateDetails(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/GetDetails", ReplyAction="http://tempuri.org/IWaterAnalytics/GetDetailsResponse")]
    WaterAnalyticsService.IndividualAddress GetDetails(int sensorId);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/GetDetails", ReplyAction="http://tempuri.org/IWaterAnalytics/GetDetailsResponse")]
    System.IAsyncResult BeginGetDetails(int sensorId, System.AsyncCallback callback, object asyncState);
    
    WaterAnalyticsService.IndividualAddress EndGetDetails(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/GetDataByZone", ReplyAction="http://tempuri.org/IWaterAnalytics/GetDataByZoneResponse")]
    WaterAnalyticsService.ZoneDetails[] GetDataByZone(System.DateTime from, System.DateTime to);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/GetDataByZone", ReplyAction="http://tempuri.org/IWaterAnalytics/GetDataByZoneResponse")]
    System.IAsyncResult BeginGetDataByZone(System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState);
    
    WaterAnalyticsService.ZoneDetails[] EndGetDataByZone(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/GetGroundWaterByLocation", ReplyAction="http://tempuri.org/IWaterAnalytics/GetGroundWaterByLocationResponse")]
    WaterAnalyticsService.GroundWaterDetail[] GetGroundWaterByLocation(string Location, int from, int to);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWaterAnalytics/GetGroundWaterByLocation", ReplyAction="http://tempuri.org/IWaterAnalytics/GetGroundWaterByLocationResponse")]
    System.IAsyncResult BeginGetGroundWaterByLocation(string Location, int from, int to, System.AsyncCallback callback, object asyncState);
    
    WaterAnalyticsService.GroundWaterDetail[] EndGetGroundWaterByLocation(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IWaterAnalyticsChannel : IWaterAnalytics, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class IsAuthenticatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public IsAuthenticatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public int Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class GetWaterQuantByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetWaterQuantByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WaterAnalyticsService.WaterQuant[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WaterAnalyticsService.WaterQuant[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class GetWaterQuantByLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetWaterQuantByLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WaterAnalyticsService.WaterQuantLocation[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WaterAnalyticsService.WaterQuantLocation[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class GetWaterQuantPerPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetWaterQuantPerPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WaterAnalyticsService.WaterQuant[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WaterAnalyticsService.WaterQuant[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class GetAllLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetAllLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WaterAnalyticsService.LocationDetails[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WaterAnalyticsService.LocationDetails[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class GetWaterQuantPerPersonAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetWaterQuantPerPersonAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WaterAnalyticsService.WaterQuantLocation[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WaterAnalyticsService.WaterQuantLocation[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class UpdateDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public UpdateDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public int Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class GetDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WaterAnalyticsService.IndividualAddress Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WaterAnalyticsService.IndividualAddress)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class GetDataByZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetDataByZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WaterAnalyticsService.ZoneDetails[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WaterAnalyticsService.ZoneDetails[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class GetGroundWaterByLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetGroundWaterByLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WaterAnalyticsService.GroundWaterDetail[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WaterAnalyticsService.GroundWaterDetail[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class WaterAnalyticsClient : System.ServiceModel.ClientBase<IWaterAnalytics>, IWaterAnalytics
{
    
    private BeginOperationDelegate onBeginIsAuthenticatedDelegate;
    
    private EndOperationDelegate onEndIsAuthenticatedDelegate;
    
    private System.Threading.SendOrPostCallback onIsAuthenticatedCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetWaterQuantByUserIdDelegate;
    
    private EndOperationDelegate onEndGetWaterQuantByUserIdDelegate;
    
    private System.Threading.SendOrPostCallback onGetWaterQuantByUserIdCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetWaterQuantByLocationDelegate;
    
    private EndOperationDelegate onEndGetWaterQuantByLocationDelegate;
    
    private System.Threading.SendOrPostCallback onGetWaterQuantByLocationCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetWaterQuantPerPersonDelegate;
    
    private EndOperationDelegate onEndGetWaterQuantPerPersonDelegate;
    
    private System.Threading.SendOrPostCallback onGetWaterQuantPerPersonCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetAllLocationDelegate;
    
    private EndOperationDelegate onEndGetAllLocationDelegate;
    
    private System.Threading.SendOrPostCallback onGetAllLocationCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetWaterQuantPerPersonAreaDelegate;
    
    private EndOperationDelegate onEndGetWaterQuantPerPersonAreaDelegate;
    
    private System.Threading.SendOrPostCallback onGetWaterQuantPerPersonAreaCompletedDelegate;
    
    private BeginOperationDelegate onBeginUpdateDetailsDelegate;
    
    private EndOperationDelegate onEndUpdateDetailsDelegate;
    
    private System.Threading.SendOrPostCallback onUpdateDetailsCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetDetailsDelegate;
    
    private EndOperationDelegate onEndGetDetailsDelegate;
    
    private System.Threading.SendOrPostCallback onGetDetailsCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetDataByZoneDelegate;
    
    private EndOperationDelegate onEndGetDataByZoneDelegate;
    
    private System.Threading.SendOrPostCallback onGetDataByZoneCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetGroundWaterByLocationDelegate;
    
    private EndOperationDelegate onEndGetGroundWaterByLocationDelegate;
    
    private System.Threading.SendOrPostCallback onGetGroundWaterByLocationCompletedDelegate;
    
    public WaterAnalyticsClient()
    {
    }
    
    public WaterAnalyticsClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public WaterAnalyticsClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WaterAnalyticsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WaterAnalyticsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public event System.EventHandler<IsAuthenticatedCompletedEventArgs> IsAuthenticatedCompleted;
    
    public event System.EventHandler<GetWaterQuantByUserIdCompletedEventArgs> GetWaterQuantByUserIdCompleted;
    
    public event System.EventHandler<GetWaterQuantByLocationCompletedEventArgs> GetWaterQuantByLocationCompleted;
    
    public event System.EventHandler<GetWaterQuantPerPersonCompletedEventArgs> GetWaterQuantPerPersonCompleted;
    
    public event System.EventHandler<GetAllLocationCompletedEventArgs> GetAllLocationCompleted;
    
    public event System.EventHandler<GetWaterQuantPerPersonAreaCompletedEventArgs> GetWaterQuantPerPersonAreaCompleted;
    
    public event System.EventHandler<UpdateDetailsCompletedEventArgs> UpdateDetailsCompleted;
    
    public event System.EventHandler<GetDetailsCompletedEventArgs> GetDetailsCompleted;
    
    public event System.EventHandler<GetDataByZoneCompletedEventArgs> GetDataByZoneCompleted;
    
    public event System.EventHandler<GetGroundWaterByLocationCompletedEventArgs> GetGroundWaterByLocationCompleted;
    
    public int IsAuthenticated(int userId, string password)
    {
        return base.Channel.IsAuthenticated(userId, password);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginIsAuthenticated(int userId, string password, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginIsAuthenticated(userId, password, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public int EndIsAuthenticated(System.IAsyncResult result)
    {
        return base.Channel.EndIsAuthenticated(result);
    }
    
    private System.IAsyncResult OnBeginIsAuthenticated(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int userId = ((int)(inValues[0]));
        string password = ((string)(inValues[1]));
        return this.BeginIsAuthenticated(userId, password, callback, asyncState);
    }
    
    private object[] OnEndIsAuthenticated(System.IAsyncResult result)
    {
        int retVal = this.EndIsAuthenticated(result);
        return new object[] {
                retVal};
    }
    
    private void OnIsAuthenticatedCompleted(object state)
    {
        if ((this.IsAuthenticatedCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.IsAuthenticatedCompleted(this, new IsAuthenticatedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void IsAuthenticatedAsync(int userId, string password)
    {
        this.IsAuthenticatedAsync(userId, password, null);
    }
    
    public void IsAuthenticatedAsync(int userId, string password, object userState)
    {
        if ((this.onBeginIsAuthenticatedDelegate == null))
        {
            this.onBeginIsAuthenticatedDelegate = new BeginOperationDelegate(this.OnBeginIsAuthenticated);
        }
        if ((this.onEndIsAuthenticatedDelegate == null))
        {
            this.onEndIsAuthenticatedDelegate = new EndOperationDelegate(this.OnEndIsAuthenticated);
        }
        if ((this.onIsAuthenticatedCompletedDelegate == null))
        {
            this.onIsAuthenticatedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsAuthenticatedCompleted);
        }
        base.InvokeAsync(this.onBeginIsAuthenticatedDelegate, new object[] {
                    userId,
                    password}, this.onEndIsAuthenticatedDelegate, this.onIsAuthenticatedCompletedDelegate, userState);
    }
    
    public WaterAnalyticsService.WaterQuant[] GetWaterQuantByUserId(int UserID, int ind, System.DateTime from, System.DateTime To)
    {
        return base.Channel.GetWaterQuantByUserId(UserID, ind, from, To);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetWaterQuantByUserId(int UserID, int ind, System.DateTime from, System.DateTime To, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetWaterQuantByUserId(UserID, ind, from, To, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public WaterAnalyticsService.WaterQuant[] EndGetWaterQuantByUserId(System.IAsyncResult result)
    {
        return base.Channel.EndGetWaterQuantByUserId(result);
    }
    
    private System.IAsyncResult OnBeginGetWaterQuantByUserId(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int UserID = ((int)(inValues[0]));
        int ind = ((int)(inValues[1]));
        System.DateTime from = ((System.DateTime)(inValues[2]));
        System.DateTime To = ((System.DateTime)(inValues[3]));
        return this.BeginGetWaterQuantByUserId(UserID, ind, from, To, callback, asyncState);
    }
    
    private object[] OnEndGetWaterQuantByUserId(System.IAsyncResult result)
    {
        WaterAnalyticsService.WaterQuant[] retVal = this.EndGetWaterQuantByUserId(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetWaterQuantByUserIdCompleted(object state)
    {
        if ((this.GetWaterQuantByUserIdCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetWaterQuantByUserIdCompleted(this, new GetWaterQuantByUserIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetWaterQuantByUserIdAsync(int UserID, int ind, System.DateTime from, System.DateTime To)
    {
        this.GetWaterQuantByUserIdAsync(UserID, ind, from, To, null);
    }
    
    public void GetWaterQuantByUserIdAsync(int UserID, int ind, System.DateTime from, System.DateTime To, object userState)
    {
        if ((this.onBeginGetWaterQuantByUserIdDelegate == null))
        {
            this.onBeginGetWaterQuantByUserIdDelegate = new BeginOperationDelegate(this.OnBeginGetWaterQuantByUserId);
        }
        if ((this.onEndGetWaterQuantByUserIdDelegate == null))
        {
            this.onEndGetWaterQuantByUserIdDelegate = new EndOperationDelegate(this.OnEndGetWaterQuantByUserId);
        }
        if ((this.onGetWaterQuantByUserIdCompletedDelegate == null))
        {
            this.onGetWaterQuantByUserIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWaterQuantByUserIdCompleted);
        }
        base.InvokeAsync(this.onBeginGetWaterQuantByUserIdDelegate, new object[] {
                    UserID,
                    ind,
                    from,
                    To}, this.onEndGetWaterQuantByUserIdDelegate, this.onGetWaterQuantByUserIdCompletedDelegate, userState);
    }
    
    public WaterAnalyticsService.WaterQuantLocation[] GetWaterQuantByLocation(string Location, int ind, System.DateTime from, System.DateTime to)
    {
        return base.Channel.GetWaterQuantByLocation(Location, ind, from, to);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetWaterQuantByLocation(string Location, int ind, System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetWaterQuantByLocation(Location, ind, from, to, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public WaterAnalyticsService.WaterQuantLocation[] EndGetWaterQuantByLocation(System.IAsyncResult result)
    {
        return base.Channel.EndGetWaterQuantByLocation(result);
    }
    
    private System.IAsyncResult OnBeginGetWaterQuantByLocation(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string Location = ((string)(inValues[0]));
        int ind = ((int)(inValues[1]));
        System.DateTime from = ((System.DateTime)(inValues[2]));
        System.DateTime to = ((System.DateTime)(inValues[3]));
        return this.BeginGetWaterQuantByLocation(Location, ind, from, to, callback, asyncState);
    }
    
    private object[] OnEndGetWaterQuantByLocation(System.IAsyncResult result)
    {
        WaterAnalyticsService.WaterQuantLocation[] retVal = this.EndGetWaterQuantByLocation(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetWaterQuantByLocationCompleted(object state)
    {
        if ((this.GetWaterQuantByLocationCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetWaterQuantByLocationCompleted(this, new GetWaterQuantByLocationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetWaterQuantByLocationAsync(string Location, int ind, System.DateTime from, System.DateTime to)
    {
        this.GetWaterQuantByLocationAsync(Location, ind, from, to, null);
    }
    
    public void GetWaterQuantByLocationAsync(string Location, int ind, System.DateTime from, System.DateTime to, object userState)
    {
        if ((this.onBeginGetWaterQuantByLocationDelegate == null))
        {
            this.onBeginGetWaterQuantByLocationDelegate = new BeginOperationDelegate(this.OnBeginGetWaterQuantByLocation);
        }
        if ((this.onEndGetWaterQuantByLocationDelegate == null))
        {
            this.onEndGetWaterQuantByLocationDelegate = new EndOperationDelegate(this.OnEndGetWaterQuantByLocation);
        }
        if ((this.onGetWaterQuantByLocationCompletedDelegate == null))
        {
            this.onGetWaterQuantByLocationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWaterQuantByLocationCompleted);
        }
        base.InvokeAsync(this.onBeginGetWaterQuantByLocationDelegate, new object[] {
                    Location,
                    ind,
                    from,
                    to}, this.onEndGetWaterQuantByLocationDelegate, this.onGetWaterQuantByLocationCompletedDelegate, userState);
    }
    
    public WaterAnalyticsService.WaterQuant[] GetWaterQuantPerPerson(int UserID, int ind, System.DateTime from, System.DateTime to)
    {
        return base.Channel.GetWaterQuantPerPerson(UserID, ind, from, to);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetWaterQuantPerPerson(int UserID, int ind, System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetWaterQuantPerPerson(UserID, ind, from, to, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public WaterAnalyticsService.WaterQuant[] EndGetWaterQuantPerPerson(System.IAsyncResult result)
    {
        return base.Channel.EndGetWaterQuantPerPerson(result);
    }
    
    private System.IAsyncResult OnBeginGetWaterQuantPerPerson(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int UserID = ((int)(inValues[0]));
        int ind = ((int)(inValues[1]));
        System.DateTime from = ((System.DateTime)(inValues[2]));
        System.DateTime to = ((System.DateTime)(inValues[3]));
        return this.BeginGetWaterQuantPerPerson(UserID, ind, from, to, callback, asyncState);
    }
    
    private object[] OnEndGetWaterQuantPerPerson(System.IAsyncResult result)
    {
        WaterAnalyticsService.WaterQuant[] retVal = this.EndGetWaterQuantPerPerson(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetWaterQuantPerPersonCompleted(object state)
    {
        if ((this.GetWaterQuantPerPersonCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetWaterQuantPerPersonCompleted(this, new GetWaterQuantPerPersonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetWaterQuantPerPersonAsync(int UserID, int ind, System.DateTime from, System.DateTime to)
    {
        this.GetWaterQuantPerPersonAsync(UserID, ind, from, to, null);
    }
    
    public void GetWaterQuantPerPersonAsync(int UserID, int ind, System.DateTime from, System.DateTime to, object userState)
    {
        if ((this.onBeginGetWaterQuantPerPersonDelegate == null))
        {
            this.onBeginGetWaterQuantPerPersonDelegate = new BeginOperationDelegate(this.OnBeginGetWaterQuantPerPerson);
        }
        if ((this.onEndGetWaterQuantPerPersonDelegate == null))
        {
            this.onEndGetWaterQuantPerPersonDelegate = new EndOperationDelegate(this.OnEndGetWaterQuantPerPerson);
        }
        if ((this.onGetWaterQuantPerPersonCompletedDelegate == null))
        {
            this.onGetWaterQuantPerPersonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWaterQuantPerPersonCompleted);
        }
        base.InvokeAsync(this.onBeginGetWaterQuantPerPersonDelegate, new object[] {
                    UserID,
                    ind,
                    from,
                    to}, this.onEndGetWaterQuantPerPersonDelegate, this.onGetWaterQuantPerPersonCompletedDelegate, userState);
    }
    
    public WaterAnalyticsService.LocationDetails[] GetAllLocation()
    {
        return base.Channel.GetAllLocation();
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetAllLocation(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetAllLocation(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public WaterAnalyticsService.LocationDetails[] EndGetAllLocation(System.IAsyncResult result)
    {
        return base.Channel.EndGetAllLocation(result);
    }
    
    private System.IAsyncResult OnBeginGetAllLocation(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginGetAllLocation(callback, asyncState);
    }
    
    private object[] OnEndGetAllLocation(System.IAsyncResult result)
    {
        WaterAnalyticsService.LocationDetails[] retVal = this.EndGetAllLocation(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetAllLocationCompleted(object state)
    {
        if ((this.GetAllLocationCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetAllLocationCompleted(this, new GetAllLocationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetAllLocationAsync()
    {
        this.GetAllLocationAsync(null);
    }
    
    public void GetAllLocationAsync(object userState)
    {
        if ((this.onBeginGetAllLocationDelegate == null))
        {
            this.onBeginGetAllLocationDelegate = new BeginOperationDelegate(this.OnBeginGetAllLocation);
        }
        if ((this.onEndGetAllLocationDelegate == null))
        {
            this.onEndGetAllLocationDelegate = new EndOperationDelegate(this.OnEndGetAllLocation);
        }
        if ((this.onGetAllLocationCompletedDelegate == null))
        {
            this.onGetAllLocationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLocationCompleted);
        }
        base.InvokeAsync(this.onBeginGetAllLocationDelegate, null, this.onEndGetAllLocationDelegate, this.onGetAllLocationCompletedDelegate, userState);
    }
    
    public WaterAnalyticsService.WaterQuantLocation[] GetWaterQuantPerPersonArea(string Area, int ind, System.DateTime from, System.DateTime to)
    {
        return base.Channel.GetWaterQuantPerPersonArea(Area, ind, from, to);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetWaterQuantPerPersonArea(string Area, int ind, System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetWaterQuantPerPersonArea(Area, ind, from, to, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public WaterAnalyticsService.WaterQuantLocation[] EndGetWaterQuantPerPersonArea(System.IAsyncResult result)
    {
        return base.Channel.EndGetWaterQuantPerPersonArea(result);
    }
    
    private System.IAsyncResult OnBeginGetWaterQuantPerPersonArea(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string Area = ((string)(inValues[0]));
        int ind = ((int)(inValues[1]));
        System.DateTime from = ((System.DateTime)(inValues[2]));
        System.DateTime to = ((System.DateTime)(inValues[3]));
        return this.BeginGetWaterQuantPerPersonArea(Area, ind, from, to, callback, asyncState);
    }
    
    private object[] OnEndGetWaterQuantPerPersonArea(System.IAsyncResult result)
    {
        WaterAnalyticsService.WaterQuantLocation[] retVal = this.EndGetWaterQuantPerPersonArea(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetWaterQuantPerPersonAreaCompleted(object state)
    {
        if ((this.GetWaterQuantPerPersonAreaCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetWaterQuantPerPersonAreaCompleted(this, new GetWaterQuantPerPersonAreaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetWaterQuantPerPersonAreaAsync(string Area, int ind, System.DateTime from, System.DateTime to)
    {
        this.GetWaterQuantPerPersonAreaAsync(Area, ind, from, to, null);
    }
    
    public void GetWaterQuantPerPersonAreaAsync(string Area, int ind, System.DateTime from, System.DateTime to, object userState)
    {
        if ((this.onBeginGetWaterQuantPerPersonAreaDelegate == null))
        {
            this.onBeginGetWaterQuantPerPersonAreaDelegate = new BeginOperationDelegate(this.OnBeginGetWaterQuantPerPersonArea);
        }
        if ((this.onEndGetWaterQuantPerPersonAreaDelegate == null))
        {
            this.onEndGetWaterQuantPerPersonAreaDelegate = new EndOperationDelegate(this.OnEndGetWaterQuantPerPersonArea);
        }
        if ((this.onGetWaterQuantPerPersonAreaCompletedDelegate == null))
        {
            this.onGetWaterQuantPerPersonAreaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWaterQuantPerPersonAreaCompleted);
        }
        base.InvokeAsync(this.onBeginGetWaterQuantPerPersonAreaDelegate, new object[] {
                    Area,
                    ind,
                    from,
                    to}, this.onEndGetWaterQuantPerPersonAreaDelegate, this.onGetWaterQuantPerPersonAreaCompletedDelegate, userState);
    }
    
    public int UpdateDetails(int UserID, string Name, string email, int noOfPeople)
    {
        return base.Channel.UpdateDetails(UserID, Name, email, noOfPeople);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginUpdateDetails(int UserID, string Name, string email, int noOfPeople, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUpdateDetails(UserID, Name, email, noOfPeople, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public int EndUpdateDetails(System.IAsyncResult result)
    {
        return base.Channel.EndUpdateDetails(result);
    }
    
    private System.IAsyncResult OnBeginUpdateDetails(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int UserID = ((int)(inValues[0]));
        string Name = ((string)(inValues[1]));
        string email = ((string)(inValues[2]));
        int noOfPeople = ((int)(inValues[3]));
        return this.BeginUpdateDetails(UserID, Name, email, noOfPeople, callback, asyncState);
    }
    
    private object[] OnEndUpdateDetails(System.IAsyncResult result)
    {
        int retVal = this.EndUpdateDetails(result);
        return new object[] {
                retVal};
    }
    
    private void OnUpdateDetailsCompleted(object state)
    {
        if ((this.UpdateDetailsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UpdateDetailsCompleted(this, new UpdateDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void UpdateDetailsAsync(int UserID, string Name, string email, int noOfPeople)
    {
        this.UpdateDetailsAsync(UserID, Name, email, noOfPeople, null);
    }
    
    public void UpdateDetailsAsync(int UserID, string Name, string email, int noOfPeople, object userState)
    {
        if ((this.onBeginUpdateDetailsDelegate == null))
        {
            this.onBeginUpdateDetailsDelegate = new BeginOperationDelegate(this.OnBeginUpdateDetails);
        }
        if ((this.onEndUpdateDetailsDelegate == null))
        {
            this.onEndUpdateDetailsDelegate = new EndOperationDelegate(this.OnEndUpdateDetails);
        }
        if ((this.onUpdateDetailsCompletedDelegate == null))
        {
            this.onUpdateDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDetailsCompleted);
        }
        base.InvokeAsync(this.onBeginUpdateDetailsDelegate, new object[] {
                    UserID,
                    Name,
                    email,
                    noOfPeople}, this.onEndUpdateDetailsDelegate, this.onUpdateDetailsCompletedDelegate, userState);
    }
    
    public WaterAnalyticsService.IndividualAddress GetDetails(int sensorId)
    {
        return base.Channel.GetDetails(sensorId);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetDetails(int sensorId, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetDetails(sensorId, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public WaterAnalyticsService.IndividualAddress EndGetDetails(System.IAsyncResult result)
    {
        return base.Channel.EndGetDetails(result);
    }
    
    private System.IAsyncResult OnBeginGetDetails(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int sensorId = ((int)(inValues[0]));
        return this.BeginGetDetails(sensorId, callback, asyncState);
    }
    
    private object[] OnEndGetDetails(System.IAsyncResult result)
    {
        WaterAnalyticsService.IndividualAddress retVal = this.EndGetDetails(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetDetailsCompleted(object state)
    {
        if ((this.GetDetailsCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDetailsCompleted(this, new GetDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetDetailsAsync(int sensorId)
    {
        this.GetDetailsAsync(sensorId, null);
    }
    
    public void GetDetailsAsync(int sensorId, object userState)
    {
        if ((this.onBeginGetDetailsDelegate == null))
        {
            this.onBeginGetDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetDetails);
        }
        if ((this.onEndGetDetailsDelegate == null))
        {
            this.onEndGetDetailsDelegate = new EndOperationDelegate(this.OnEndGetDetails);
        }
        if ((this.onGetDetailsCompletedDelegate == null))
        {
            this.onGetDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDetailsCompleted);
        }
        base.InvokeAsync(this.onBeginGetDetailsDelegate, new object[] {
                    sensorId}, this.onEndGetDetailsDelegate, this.onGetDetailsCompletedDelegate, userState);
    }
    
    public WaterAnalyticsService.ZoneDetails[] GetDataByZone(System.DateTime from, System.DateTime to)
    {
        return base.Channel.GetDataByZone(from, to);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetDataByZone(System.DateTime from, System.DateTime to, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetDataByZone(from, to, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public WaterAnalyticsService.ZoneDetails[] EndGetDataByZone(System.IAsyncResult result)
    {
        return base.Channel.EndGetDataByZone(result);
    }
    
    private System.IAsyncResult OnBeginGetDataByZone(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        System.DateTime from = ((System.DateTime)(inValues[0]));
        System.DateTime to = ((System.DateTime)(inValues[1]));
        return this.BeginGetDataByZone(from, to, callback, asyncState);
    }
    
    private object[] OnEndGetDataByZone(System.IAsyncResult result)
    {
        WaterAnalyticsService.ZoneDetails[] retVal = this.EndGetDataByZone(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetDataByZoneCompleted(object state)
    {
        if ((this.GetDataByZoneCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetDataByZoneCompleted(this, new GetDataByZoneCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetDataByZoneAsync(System.DateTime from, System.DateTime to)
    {
        this.GetDataByZoneAsync(from, to, null);
    }
    
    public void GetDataByZoneAsync(System.DateTime from, System.DateTime to, object userState)
    {
        if ((this.onBeginGetDataByZoneDelegate == null))
        {
            this.onBeginGetDataByZoneDelegate = new BeginOperationDelegate(this.OnBeginGetDataByZone);
        }
        if ((this.onEndGetDataByZoneDelegate == null))
        {
            this.onEndGetDataByZoneDelegate = new EndOperationDelegate(this.OnEndGetDataByZone);
        }
        if ((this.onGetDataByZoneCompletedDelegate == null))
        {
            this.onGetDataByZoneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataByZoneCompleted);
        }
        base.InvokeAsync(this.onBeginGetDataByZoneDelegate, new object[] {
                    from,
                    to}, this.onEndGetDataByZoneDelegate, this.onGetDataByZoneCompletedDelegate, userState);
    }
    
    public WaterAnalyticsService.GroundWaterDetail[] GetGroundWaterByLocation(string Location, int from, int to)
    {
        return base.Channel.GetGroundWaterByLocation(Location, from, to);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public System.IAsyncResult BeginGetGroundWaterByLocation(string Location, int from, int to, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetGroundWaterByLocation(Location, from, to, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    public WaterAnalyticsService.GroundWaterDetail[] EndGetGroundWaterByLocation(System.IAsyncResult result)
    {
        return base.Channel.EndGetGroundWaterByLocation(result);
    }
    
    private System.IAsyncResult OnBeginGetGroundWaterByLocation(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        string Location = ((string)(inValues[0]));
        int from = ((int)(inValues[1]));
        int to = ((int)(inValues[2]));
        return this.BeginGetGroundWaterByLocation(Location, from, to, callback, asyncState);
    }
    
    private object[] OnEndGetGroundWaterByLocation(System.IAsyncResult result)
    {
        WaterAnalyticsService.GroundWaterDetail[] retVal = this.EndGetGroundWaterByLocation(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetGroundWaterByLocationCompleted(object state)
    {
        if ((this.GetGroundWaterByLocationCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetGroundWaterByLocationCompleted(this, new GetGroundWaterByLocationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetGroundWaterByLocationAsync(string Location, int from, int to)
    {
        this.GetGroundWaterByLocationAsync(Location, from, to, null);
    }
    
    public void GetGroundWaterByLocationAsync(string Location, int from, int to, object userState)
    {
        if ((this.onBeginGetGroundWaterByLocationDelegate == null))
        {
            this.onBeginGetGroundWaterByLocationDelegate = new BeginOperationDelegate(this.OnBeginGetGroundWaterByLocation);
        }
        if ((this.onEndGetGroundWaterByLocationDelegate == null))
        {
            this.onEndGetGroundWaterByLocationDelegate = new EndOperationDelegate(this.OnEndGetGroundWaterByLocation);
        }
        if ((this.onGetGroundWaterByLocationCompletedDelegate == null))
        {
            this.onGetGroundWaterByLocationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGroundWaterByLocationCompleted);
        }
        base.InvokeAsync(this.onBeginGetGroundWaterByLocationDelegate, new object[] {
                    Location,
                    from,
                    to}, this.onEndGetGroundWaterByLocationDelegate, this.onGetGroundWaterByLocationCompletedDelegate, userState);
    }
}
