//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WaterAnalyticsSolution.WaterAnalyticsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WaterQuant", Namespace="http://schemas.datacontract.org/2004/07/WaterAnalyticsService")]
    [System.SerializableAttribute()]
    public partial class WaterQuant : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Stime {
            get {
                return this.StimeField;
            }
            set {
                if ((this.StimeField.Equals(value) != true)) {
                    this.StimeField = value;
                    this.RaisePropertyChanged("Stime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WaterQuantLocation", Namespace="http://schemas.datacontract.org/2004/07/WaterAnalyticsService")]
    [System.SerializableAttribute()]
    public partial class WaterQuantLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Stime {
            get {
                return this.StimeField;
            }
            set {
                if ((this.StimeField.Equals(value) != true)) {
                    this.StimeField = value;
                    this.RaisePropertyChanged("Stime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndAddress", Namespace="http://schemas.datacontract.org/2004/07/WaterAnalyticsService")]
    [System.SerializableAttribute()]
    public partial class IndAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoOfPeopleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SensorIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfPeople {
            get {
                return this.NoOfPeopleField;
            }
            set {
                if ((this.NoOfPeopleField.Equals(value) != true)) {
                    this.NoOfPeopleField = value;
                    this.RaisePropertyChanged("NoOfPeople");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SensorID {
            get {
                return this.SensorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorIDField, value) != true)) {
                    this.SensorIDField = value;
                    this.RaisePropertyChanged("SensorID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WaterAnalyticsService.IWaterAnalytics")]
    public interface IWaterAnalytics {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/isAuthenticated", ReplyAction="http://tempuri.org/IWaterAnalytics/isAuthenticatedResponse")]
        int isAuthenticated(int userId, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/getWaterQuantByUserId", ReplyAction="http://tempuri.org/IWaterAnalytics/getWaterQuantByUserIdResponse")]
        WaterAnalyticsSolution.WaterAnalyticsService.WaterQuant[] getWaterQuantByUserId(int UserID, int ind, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/getWaterQuantByLocation", ReplyAction="http://tempuri.org/IWaterAnalytics/getWaterQuantByLocationResponse")]
        WaterAnalyticsSolution.WaterAnalyticsService.WaterQuantLocation[] getWaterQuantByLocation(string Location, int ind, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/getWaterQuantPerPerson", ReplyAction="http://tempuri.org/IWaterAnalytics/getWaterQuantPerPersonResponse")]
        WaterAnalyticsSolution.WaterAnalyticsService.WaterQuant[] getWaterQuantPerPerson(int UserID, int ind, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/UpdateDetails", ReplyAction="http://tempuri.org/IWaterAnalytics/UpdateDetailsResponse")]
        int UpdateDetails(int UserID, string Name, string email, int noOfPeople);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWaterAnalytics/getDetails", ReplyAction="http://tempuri.org/IWaterAnalytics/getDetailsResponse")]
        WaterAnalyticsSolution.WaterAnalyticsService.IndAddress getDetails(int sensorId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWaterAnalyticsChannel : WaterAnalyticsSolution.WaterAnalyticsService.IWaterAnalytics, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WaterAnalyticsClient : System.ServiceModel.ClientBase<WaterAnalyticsSolution.WaterAnalyticsService.IWaterAnalytics>, WaterAnalyticsSolution.WaterAnalyticsService.IWaterAnalytics {
        
        public WaterAnalyticsClient() {
        }
        
        public WaterAnalyticsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WaterAnalyticsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WaterAnalyticsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WaterAnalyticsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int isAuthenticated(int userId, string password) {
            return base.Channel.isAuthenticated(userId, password);
        }
        
        public WaterAnalyticsSolution.WaterAnalyticsService.WaterQuant[] getWaterQuantByUserId(int UserID, int ind, System.DateTime from, System.DateTime to) {
            return base.Channel.getWaterQuantByUserId(UserID, ind, from, to);
        }
        
        public WaterAnalyticsSolution.WaterAnalyticsService.WaterQuantLocation[] getWaterQuantByLocation(string Location, int ind, System.DateTime from, System.DateTime to) {
            return base.Channel.getWaterQuantByLocation(Location, ind, from, to);
        }
        
        public WaterAnalyticsSolution.WaterAnalyticsService.WaterQuant[] getWaterQuantPerPerson(int UserID, int ind, System.DateTime from, System.DateTime to) {
            return base.Channel.getWaterQuantPerPerson(UserID, ind, from, to);
        }
        
        public int UpdateDetails(int UserID, string Name, string email, int noOfPeople) {
            return base.Channel.UpdateDetails(UserID, Name, email, noOfPeople);
        }
        
        public WaterAnalyticsSolution.WaterAnalyticsService.IndAddress getDetails(int sensorId) {
            return base.Channel.getDetails(sensorId);
        }
    }
}
